{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  register(user) {\n    return this.http.post('http://localhost:8084/api/users/register', user);\n  }\n  login(user) {\n    return this.http.post('http://localhost:8084/api/users/login', user).pipe(tap(response => {\n      console.log(\"Respuesta del login:\", response);\n      // Suponiendo que el token viene en la respuesta bajo alguna propiedad, por ejemplo 'token'\n      sessionStorage.setItem('token-products', JSON.stringify(response.token));\n    }));\n  }\n  logout() {\n    // Simplemente elimina el token del sessionStorage\n    sessionStorage.removeItem('token-products');\n    // Aquí puedes redirigir al login o manejar el logout de otra manera si es necesario\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["tap","AuthService","constructor","http","register","user","post","login","pipe","response","console","log","sessionStorage","setItem","JSON","stringify","token","logout","removeItem","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\aemae\\OneDrive\\Escritorio\\FormulariosAngular\\formularios\\src\\app\\auth\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  register(user: any){\n   \n\n    return this.http.post('http://localhost:8084/api/users/register', user )\n  }\nlogin(user: any) {\n  return this.http.post('http://localhost:8084/api/users/login', user).pipe(\n    tap((response: any) => {\n      console.log(\"Respuesta del login:\", response);\n      // Suponiendo que el token viene en la respuesta bajo alguna propiedad, por ejemplo 'token'\n      sessionStorage.setItem('token-products', JSON.stringify(response.token));\n    })\n  );\n}\n\nlogout() {\n  // Simplemente elimina el token del sessionStorage\n  sessionStorage.removeItem('token-products');\n  // Aquí puedes redirigir al login o manejar el logout de otra manera si es necesario\n}\n}\n"],"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;AAKpC,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,QAAQA,CAACC,IAAS;IAGhB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,0CAA0C,EAAED,IAAI,CAAE;EAC1E;EACFE,KAAKA,CAACF,IAAS;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,uCAAuC,EAAED,IAAI,CAAC,CAACG,IAAI,CACvER,GAAG,CAAES,QAAa,IAAI;MACpBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,QAAQ,CAAC;MAC7C;MACAG,cAAc,CAACC,OAAO,CAAC,gBAAgB,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACO,KAAK,CAAC,CAAC;IAC1E,CAAC,CAAC,CACH;EACH;EAEAC,MAAMA,CAAA;IACJ;IACAL,cAAc,CAACM,UAAU,CAAC,gBAAgB,CAAC;IAC3C;EACF;EAAC,QAAAC,CAAA,G;qBAvBYlB,WAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXvB,WAAW;IAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}