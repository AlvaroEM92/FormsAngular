{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AssignTokenInterceptor {\n  constructor() {}\n  intercept(request, next) {\n    const token = JSON.parse(sessionStorage.getItem('token-products'));\n    const authRequest = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return next.handle(request);\n  }\n  static #_ = this.ɵfac = function AssignTokenInterceptor_Factory(t) {\n    return new (t || AssignTokenInterceptor)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AssignTokenInterceptor,\n    factory: AssignTokenInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["AssignTokenInterceptor","constructor","intercept","request","next","token","JSON","parse","sessionStorage","getItem","authRequest","clone","setHeaders","Authorization","handle","_","_2","factory","ɵfac"],"sources":["C:\\Users\\aemae\\OneDrive\\Escritorio\\FormulariosAngular\\formularios\\src\\app\\auth\\interceptors\\assign-token.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AssignTokenInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const token = JSON.parse(sessionStorage.getItem('token-products')!);\n    const authRequest = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`\n      }\n    })\n    return next.handle(request);\n  }\n}\n"],"mappings":";AAUA,OAAM,MAAOA,sBAAsB;EAEjCC,YAAA,GAAe;EAEfC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,gBAAgB,CAAE,CAAC;IACnE,MAAMC,WAAW,GAAGP,OAAO,CAACQ,KAAK,CAAC;MAChCC,UAAU,EAAE;QACVC,aAAa,EAAE,UAAUR,KAAK;;KAEjC,CAAC;IACF,OAAOD,IAAI,CAACU,MAAM,CAACX,OAAO,CAAC;EAC7B;EAAC,QAAAY,CAAA,G;qBAZUf,sBAAsB;EAAA;EAAA,QAAAgB,EAAA,G;WAAtBhB,sBAAsB;IAAAiB,OAAA,EAAtBjB,sBAAsB,CAAAkB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}